@using ProyectoPlanetario.Models;

@model Tuple<ProyectoPlanetario.Models.telefonum, List<SelectListItem>>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
        <div class="form-horizontal">
            <h4>Carga de teléfonos</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                <h4 class="" control-label col-md-2"">Persona</h4>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Item1.personaid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Item1.personaid, "", new { @class = "text-danger" })
                  @Html.DropDownListFor(m => m.Item2, Model.Item2, "Seleccionar cliente", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Item1.telefono, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Item1.telefono, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Crear" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }



    <div>
        @Html.ActionLink("Back to List", "Index", new { @class = "btn btn-primary" }, new { @class = "btn btn-primary" })
    </div>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
                $('select[name=selector] option').filter(':selected').val()
                $('select').on('change', function () {
                  //ways to retrieve selected option and text outside handler
                  console.log('Changed option value ' + this.value);
                  console.log('Changed option text ' + $(this).find('option').filter(':selected').text());
                });
</script>   